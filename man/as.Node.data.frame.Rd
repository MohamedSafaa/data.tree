% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/node_conversion_dataframe.R
\name{as.Node.data.frame}
\alias{FromDataFrameTable}
\alias{FromDataFrameTaxonomy}
\alias{as.Node.data.frame}
\title{Convert a \code{data.frame} to a \code{data.tree} structure}
\usage{
\method{as.Node}{data.frame}(x, ..., mode = c("table", "taxonomy"),
  pathName = "pathString", pathDelimiter = "/", colLevels = NULL,
  na.rm = TRUE)

FromDataFrameTable(table, pathName = "pathString", pathDelimiter = "/",
  colLevels = NULL, na.rm = TRUE)

FromDataFrameTaxonomy(taxonomy)
}
\arguments{
\item{x}{The data.frame in the required format.}

\item{...}{Any other argument implementations of this might need}

\item{mode}{Either "table" (if x is a data.frame in tree or table format) or "taxonomy"}

\item{pathName}{The name of the column in x containing the path of the row}

\item{pathDelimiter}{The delimiter used}

\item{colLevels}{Nested list of column names, determining on what node levels the attributes are written to.}

\item{na.rm}{If \code{TRUE}, then NA's are treated as NULL and values will not be set on nodes}

\item{table}{a \code{data.frame} in *table* or *tree* format, i.e. having a row for each leaf (and optionally
for additional nodes). There should be a column called \code{pathName}, separated by \code{pathDelimiter},
describing the path of each row.}

\item{taxonomy}{A \code{data.frame} in taxonomy format, i.e.
it must adhere to the following requirements:
\itemize{
 \item{It must contain as many rows as there are nodes, excluding the root}
 \item{Its first column must be called *children*, and contain the name of each node, whereby each name must be unique within a node's level}
 \item{Its second column must be called *parents*, and contain the name of the parent of each node}
 \item{Its third column must be called *level*, and contain the level of the node}
 \item{The rows must be ordered by level, increasing}
}}
}
\value{
The root \code{Node} of the \code{data.tree} structure
}
\description{
Convert a \code{data.frame} to a \code{data.tree} structure
}
\examples{
data(acme)

#Tree
x <- ToDataFrameTree(acme, "pathString", "p", "cost")
x
xN <- as.Node(x)
print(xN, "p", "cost")

#Table
x <- ToDataFrameTable(acme, "pathString", "p", "cost")
x
xN <- FromDataFrameTable(x)
print(xN, "p", "cost")

#More complex Table structure, using colLevels
acme$Set(floor = c(1, 2, 3),  filterFun = function(x) x$level == 2)
x <- ToDataFrameTable(acme, "pathString", "floor", "p", "cost")
x
xN <- FromDataFrameTable(x, colLevels = list(NULL, "floor", c("p", "cost")), na.rm = TRUE)
print(xN, "floor", "p", "cost")

#Taxonomy
x <- ToDataFrameTaxonomy(acme, "p", "cost")
x
xN <- FromDataFrameTaxonomy(x)
print(xN, "p", "cost")
}
\seealso{
\code{\link{as.data.frame.Node}}

Other as.Node: \code{\link{FromListExplicit}},
  \code{\link{FromListSimple}}, \code{\link{as.Node.list}};
  \code{\link{as.Node.dendrogram}};
  \code{\link{as.Node.phylo}}; \code{\link{as.Node}}
}

