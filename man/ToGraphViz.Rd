% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/node_methods.R, R/node_plot.R, R/util.R
\name{SetNodeStyle}
\alias{GetDefaultTooltip}
\alias{SetEdgeStyle}
\alias{SetGraphStyle}
\alias{SetNodeStyle}
\alias{ToGraphViz}
\alias{plot.Node}
\title{Get a graphviz dot representation of the tree}
\usage{
SetNodeStyle(node, inherit = TRUE, ...)

SetEdgeStyle(node, inherit = TRUE, ...)

SetGraphStyle(root, ...)

\method{plot}{Node}(x, direction = c("climb", "descend"), pruneFun = NULL,
  engine = "dot")

ToGraphViz(root, direction = c("climb", "descend"), pruneFun = NULL)

GetDefaultTooltip(node)
}
\arguments{
\item{node}{The \code{\link{Node}} of the data.tree structure on which you would like to set style attributes.}

\item{inherit}{If TRUE, then children will inherit this node's style. Otherwise they inherit from this
node's parent.}

\item{...}{Any stlye / value pair. See http://graphviz.org/Documentation.php for details.}

\item{root}{The root \code{\link{Node}} of the data.tree structure to visualize.}

\item{x}{The root node of the data.tree structure to plot}

\item{direction}{when converting to a network, should the edges point from root to children ("climb") or from child to parent ("descend")?}

\item{pruneFun}{a function taking a \code{Node} as an argument. See \code{\link{Traverse}} for details.}

\item{engine}{string for the Graphviz layout engine; can be dot (default),
neato, circo, or twopi. For more information see https://github.com/mdaines/viz.js#usage.}
}
\description{
Get a graphviz dot representation of the tree
}
\examples{
data(acme)
SetGraphStyle(acme, rankdir = "TB")
SetEdgeStyle(acme, arrowhead = "vee", color = "grey35", penwidth = 2)
#per default, Node style attributes will be inherited:
SetNodeStyle(acme, style = "filled,rounded", shape = "box", fillcolor = "GreenYellow",
             fontname = "helvetica", tooltip = GetDefaultTooltip)
SetNodeStyle(acme$IT, fillcolor = "LightBlue", penwidth = "5px")
#inheritance can be avoided:
SetNodeStyle(acme$Accounting, inherit = FALSE, fillcolor = "Thistle",
             fontcolor = "Firebrick", tooltip = "This is the accounting department")
#use Do to set style on specific nodes:
Do(acme$leaves, function(node) SetNodeStyle(node, shape = "egg"))
plot(acme)
}

