% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/node_methods.R
\name{Set}
\alias{Set}
\title{Traverse a Tree and Assign Values}
\usage{
Set(node, ..., traversal = c("pre-order", "post-order", "in-order", "level",
  "ancestor"), pruneFun = NULL, filterFun = NULL)
}
\arguments{
\item{node}{The \code{Node} to traverse}

\item{...}{each argument can be a vector of values to be assigned. Recycled.}

\item{traversal}{any of 'pre-order' (the default), 'post-order', 'in-order', 'level', or 'ancestor'}

\item{pruneFun}{A pruning function, returning \code{TRUE} if a \code{Node} and its sub
tree should be kept.}

\item{filterFun}{A filter function, returning \code{TRUE} if a \code{Node} should be kept.}
}
\value{
invisibly returns the node (useful for chaining)
}
\description{
The method takes one or more vectors as an argument. It traverses the tree, and assigns values to variables, whereby the values are picked
from the vector. Also available as OO-style method on \code{\link{Node}}.
}
\examples{
data(acme)
acme$Set(departmentId = 1:acme$totalCount, openingHours = NULL, traversal = "post-order")
acme$Set(head = c("Jack Brown",
                  "Mona Moneyhead",
                  "Dr. Frank N. Stein",
                  "Eric Nerdahl"
                  ),
         filterFun = function(x) !x$isLeaf
        )
print(acme, "departmentId", "head")
}
\seealso{
\code{\link{Node}}

\code{\link{Get}}
}

