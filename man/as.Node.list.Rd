% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/node_conversion.R
\name{as.Node.list}
\alias{as.Node.list}
\title{Converts a list to a Node}
\usage{
\method{as.Node}{list}(x, mode = c("simple", "explicit"), nameName = "name",
  childrenName = "children", nodeName = "", ...)
}
\arguments{
\item{x}{The list to be converted.}

\item{mode}{How the list is structured. "simple" (the default) will interpret any list to be a child. "explicit"
assumes that children are in a nested list called \code{childrenName}}

\item{nameName}{The name of the element that should be used as the name, can be NULL if the children lists are named}

\item{childrenName}{The name of the element that contains the child list}

\item{nodeName}{The name x will get (only applies if no nameName is available)}

\item{...}{Any other argument to be passed to generic sub implementations}
}
\description{
Converts a list to a Node
}
\details{
x should be of class list, and contain named elements, where the nameName will be converted to the Node's public attribute
name, and the value to its value.
x should not contain any element whose name is in NODE_RESERVED_NAMES_CONST, except the ones mentioned below.
x has to contain an element called nameName, which must be convertible to a character string.
x can contain an element called childrenName, which should be of class list. This will be converted to the Node's
children.
}
\seealso{
Other Conversions to Node: \code{\link{as.Node.data.frame}};
  \code{\link{as.Node.dendrogram}}

Other List Conversions: \code{\link{ToListExplicit}};
  \code{\link{ToListSimple}}; \code{\link{as.list.Node}}
}

